// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  name         String?
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  blogs        Blog[]
}

model Blog {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  authorId  String
  image     String?
  tags      String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  author     User                @relation(fields: [authorId], references: [id])
  categories Category[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  deletedAt DateTime?

  blogs Blog[]
}

model Menu {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  url       String
  order     Int       @default(0)
  show      Boolean?  @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  subMenus SubMenu[]
}

model SubMenu {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  url       String
  order     Int       @default(0)
  show      Boolean?  @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  menuId Int
  menu   Menu @relation(fields: [menuId], references: [id])
}
